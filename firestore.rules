rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function existingData() {
      return resource.data;
    }

    function incomingData() {
      return request.resource.data;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    function verifyFields(required, optional) {
      let allowedFields = required.concat(optional); // Creating an allow list

      return 
        incomingData().keys().hasAll(required) &&
        incomingData().keys().hasOnly(allowedFields);
    }

    function verifyFeedbackCollectionTypes() {
      return 
        incomingData().uid is string &&
        incomingData().feedback is string &&
        incomingData().createdAt is timestamp;
    }

    function verifyFieldsNotEmptyStrings() {
      return 
        !(incomingData().uid == '') &&
        !(incomingData().feedback == '') &&
        !(incomingData().createdAt == '');
    }
    

    // ALL DOCUMENTS
    match /{document=**} {
      allow read, write: if false;
    }


    // FEEDACK COLLECTION
  	// No one should read the feedback
    match /feedback/{feedbackId} {
      allow read: if false;
    }
    
    // Users can only create feedback
    match /feedback/{feedbackId} {
      allow update: if false;
      allow delete: if false;

      // Required fields: uid, feedback & createdAt
      // Optional field: emoji
      allow create: if verifyFields(['uid', 'feedback', 'createdAt'], ['uid', 'feedback', 'emoji', 'createdAt'])
        && verifyFeedbackCollectionTypes()
        && verifyFieldsNotEmptyStrings()
        && isSignedIn()
    }
  }
}
