rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function verifyFields(required, optional) {
      let allowedFields = required.concat(optional); // Creating an allow list
      return request.resource.data.keys().hasAll(required) &&
             request.resource.data.keys().hasOnly(allowedFields);
    }

    function verifyFeedbackCollectionTypes() {
        return request.resource.data.feedback is string
        && request.resource.data.createdAt is timestamp;
    }
    

    // ALL DOCUMENTS
    match /{document=**} {
      allow read, write: if false;
    }


    // FEEDACK COLLECTION
  	// No one should read the feedback
    match /feedback/{feedbackId} {
      allow read: if false;
    }
    
    // Users can only create feedback
    match /feedback/{feedbackId} {
      allow update: if false;
      allow delete: if false;

      // Required fields: feedback & createdAt
      // Optional field: emoji
      allow create: if verifyFields(['feedback', 'createdAt'], ['feedback', 'emoji', 'createdAt'])
        && verifyFeedbackCollectionTypes()
        && !(request.resource.data.feedback == '') && !(request.resource.data.createdAt == '')
    }
  }
}
