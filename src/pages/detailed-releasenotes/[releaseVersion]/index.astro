---
/**
 * Renders each detailed preview release note individually. The version of the
 * detailed release note to render is specified in the params.
 */

import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import RenderReleaseNotesMd from "@/components/RenderReleaseNotesMd.astro";

export const getStaticPaths = (async () => {
  /**
   * `params`: every possible value this route can take. This is to prerender the
   * pages at build time.
   *
   * Since this route is for rendering a specific realease note depending on the
   * version passed in the URL, we need all the possible versionNumber values
   * from the markdown files.
   */

  const releaseNotes = await getCollection("releaseNotes");

  return releaseNotes.map((release) => {
    return {
      params: { releaseVersion: release.data.versionNumber },
      /* pass the release note that matches the version [ this is the release
       * that we need ]. */
    };
  });
}) satisfies GetStaticPaths;

const { releaseVersion } = Astro.params;
---

{
  /* 
  Call RenderReleaseNoteMd: but pass overview as false.
  RenderReleaseNoteMd component renders the body of the required release note
  Since props are the specific variables that we what to have 
 */
}

{/* Render the detailed release note as specified from the props (by the version) */}
<RenderReleaseNotesMd overview={false} detailedVersion={releaseVersion} />

