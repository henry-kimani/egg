---
import AcceptCookies from '@components/AcceptCookies.astro';
import VariantButton from '@components/buttons/VariantButton.astro';
import ProfileIcon from "@components/user/ProfileIcon.astro";
import SpecificHeading from '@components/headings/SpecificHeading.astro';

interface Props {
  userDisplayName: string | undefined;
  photoURL: string | undefined;
  email: string | undefined;
}

const { userDisplayName, photoURL, email } = Astro.props;
---
<div class="flex">
  <div>
    <ProfileIcon
      shape='egg'
      size='large'
      photo={photoURL}
    />
  </div>

  <div class="basis-2/3">
    <SpecificHeading heading='h3'>{ userDisplayName || "Anonymous" }</SpecificHeading> 
    { userDisplayName ? (
      <div>
        <div>{ email }</div>
        <form action="/api/auth/signout" method="get">
          <VariantButton theme='simple' icon='right-caret' variant='primary'>Sign Out</VariantButton>
        </form>
      </div>
    ):(
      <div>
        <div>Sign in to unlock all notes</div>
        <VariantButton id='sign-in' theme='simple' icon='right-caret' variant='primary'>Sign In</VariantButton>
      </div>
    )}
  </div>
</div> 

<AcceptCookies />

<script>
import { auth } from "@firebase/client";
import { GoogleAuthProvider, inMemoryPersistence, signInWithPopup } from "firebase/auth";

const signIn = document.querySelector("#sign-in");

auth.setPersistence(inMemoryPersistence);

signIn?.addEventListener("click", async() => {
  const provider = new GoogleAuthProvider();
  try {
    const result = await signInWithPopup(auth, provider);

    const idToken = await result.user.getIdToken();

    const res = await fetch("/api/auth/signin", {
      headers: {
        'Authorization': `Bearer ${idToken}`,
      }
    });

    if (res.redirected)
      window.location.assign(res.url);
  } catch(error) {
    window.location.assign("/error");
  }
});

</script>

