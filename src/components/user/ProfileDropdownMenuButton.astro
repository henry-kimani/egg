---
/* Render the button that opens the profile dropdown menu
 * Using the attribute 'aria-expanded', to hide and show the profile dropdown menu
*/
---
<profile-menu-button>
  <span class="notification-label hidden absolute rounded-full h-2 w-2 bg-red-500 right-7"></span>
  <button
    aria-expanded="false"
    aria-controls="user-profile-menu"
    class=`header-profile grid place-items-center cursor-pointer
      bg-[var(--sl-color-gray-6)] rounded-full border border-[var(--sl-color-gray-5)]
      dark:bg-[var(--sl-color-black)]
    `
  ></button>
</profile-menu-button>

<script>
import { $userInfo } from "@stores/userInfoStore";

class ProfileMenuButton extends HTMLElement {
  btn = this.querySelector("button")!;
  private isDropDownOpen: boolean = false;

  constructor() {
    super();

    // Initialize isDropdownOpen
    this.isDropDownOpen = false

    $userInfo.subscribe(user => {
      this.btn.innerText = user.displayName.charAt(0);
    });

    // Toggle 'aria-expanded' when clicked
    this.btn.addEventListener("click", () => this.toggleExpanded());

    // Close the profile menu on Escape
    window.addEventListener('keyup', (e) => this.closeOnEscape(e));
    window.addEventListener('click', (e) => {
      // Make sure what is been click on is not the current button
      if (!this.btn.contains(e.target as Node))
        this.closeOnOutsideClick();
    });
  }

  setExpanded(expanded: boolean) {
    this.setAttribute("aria-expanded", String(expanded));
  }

  toggleExpanded() {
    this.setExpanded(this.getAttribute('aria-expanded') !== 'true');
  }

  closeOnEscape(e: KeyboardEvent) {
    if (e.code === "Escape") {
      this.setExpanded(false);
      this.btn.focus();
    }
  }

  closeOnOutsideClick() {
    this.setExpanded(false);
    this.btn.focus();
  }
}

customElements.define("profile-menu-button", ProfileMenuButton);
</script>

<style>
.header-profile {
  width: var(--sl-menu-button-size); 
  height: var(--sl-menu-button-size);
  font-size: 1.25rem;
  line-height: 1.75rem;
}

@media (min-width: 50em) {
  :global([data-focused-mode='true']) .notification-label {
    display: block;
  }

  .header-profile {
    width: 2.75rem; 
    height: 2.75rem;
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

</style>
