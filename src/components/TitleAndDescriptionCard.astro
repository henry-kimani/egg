---
/*
 * Render a Title, a description, optinal linkcards and profile in a container.
 * 
 * Their placement is defined by the prop align.
 * 
 */
import ProfilePicture from "@components/ProfilePicture.astro";
import ResponsiveHeading from '@components/ResponsiveHeading.astro';
import ResponsiveTagline from '@components/ResponsiveTagline.astro';
import type { StarlightIcon } from '@astrojs/starlight/types';
import { cn } from '@lib/utils';
import { LinkButton } from '@astrojs/starlight/components';

interface Props {
  title: string;
  description: string;
  align: "center" | "hero" | "start"
  profile?: string; // String for an Emoji
  linkButtons?: {
    name: string;
    href: string;
    icon: StarlightIcon | undefined;
    variant: "primary" | "secondary" | "minimal";
    classes?: string;
  }[];
  parentClasses?: string;
}

const { title, description, profile, align, linkButtons, parentClasses } = Astro.props;

const isHero = align === "hero" || align === "center" ? true : false;
---

<article 
  class:list={cn(
    "grid", parentClasses,
    {
      "text-start": align === "start",
      "text-center md:text-start": align==="hero"
    }
  )}
>
  <div class="flex gap-2">
    { profile && <div class="flex-initial grid place-items-center"> <ProfilePicture profilePic={profile} /></div> }
    <div class="!m-0 grid place-items-center"><ResponsiveHeading {isHero} rawHtml={title} /></div>
  </div>

  <div>
    <ResponsiveTagline {isHero} rawHtml={description} />
  </div>

  <div>
    {linkButtons && linkButtons.map(({ name, href, icon, variant, classes }) => <LinkButton class={classes} {href} {icon} {variant}>{name}</LinkButton>)}
  </div>
</article>

<style>
.stack {
  gap: clamp(1rem, calc(1.5rem + 1vw), 2rem);
}
</style>
