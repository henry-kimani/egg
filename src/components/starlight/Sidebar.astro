---
import SidebarPersister from "@astrojs/starlight/components/SidebarPersister.astro";
import SidebarSublist from "@astrojs/starlight/components/SidebarSublist.astro";
import MobileMenuFooter from "@components/starlight/MobileMenuFooter.astro";

const { sidebar, entry } = Astro.locals.starlightRoute;

type SidebarEntry = typeof sidebar;

// Make sure that all top level items in the side bar are groups not links
type Group = Extract<SidebarEntry, { type: "group" }>;
function assertGroups(sidebar: SidebarEntry): asserts sidebar is Group[] {
  for (const entry of sidebar) {
    if (entry.type !== "group")
      throw new Error("Top-level links are not allowed in the docs");
  }
}
assertGroups(sidebar);

// Look up for the current page. The data is later used to show the current page
const isCurrent = (sidebar: SidebarEntry): boolean =>
  sidebar
  .map(entry => entry.type === "link" ? entry.isCurrent : isCurrent(entry.entries))
  .some(entry => entry === true);

---

<SidebarPersister>
  <a href="/units">Units</a>
  { sidebar.map(({ entries }) => (
    <SidebarSublist 
    sublist={
        /* Only add the data in the sidebar that*/
        entries.filter(e => e.label === entry.data.unitLabel)
      } 
    />
  ))}
</SidebarPersister>

<div class="md:sl-hidden">
  <MobileMenuFooter />
</div>

