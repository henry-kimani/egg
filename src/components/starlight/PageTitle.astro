---
import { PAGE_TITLE_ID } from "node_modules/@astrojs/starlight/constants";
import { cn } from "@lib/utils";

const routeData = Astro.locals.starlightRoute;
const pageTitle = routeData.entry.data.title;

const isDashboardProfile = routeData.id === "dashboard/profile";
const centerPageTitle = routeData.id === "signin";

---

{
  isDashboardProfile ? (
    <h1 id={PAGE_TITLE_ID}>
      <span class="user-greeting">Greetings</span>&nbsp;
      <span 
        class="username-dashboard output-type from-[var(--sl-color-accent)] to-red-600 dark:from-[var(--sl-color-accent-high)] dark:to-[var(--sl-color-accent-high)]">
      </span>
    </h1>
) : (
    <h1
      id={PAGE_TITLE_ID}
      class={cn(`text-[var(--sl-color-accent)] dark:text-[var(--sl-color-accent-high)]`, 
      {
        "text-center" : centerPageTitle
      })}
    >
      {pageTitle}
    </h1>
  )
}

<style>
  @layer starlight.core {
    h1 {
      margin-top: 1rem;
      font-size: var(--sl-text-h1);
      line-height: var(--sl-line-height-headings);
      font-weight: 600;
    }
    .user-greeting {
      color: var(--sl-color-white);
      /* animation: greetingScaleUp 1s ease-in-out 1 forwards;*/
    }
    .username-dashboard {
      background-image: linear-gradient(var(--tw-gradient-stops));
      background-clip: text;
      text-fill-color: transparent;
      -webkit-text-fill-color: transparent;
    }

    .caret {
      display: inline-block;
      width: 4px;
      height: 1em;
      background-color: var(--sl-color-white);
      margin-left: 5px !important;
      transform: translateY(3px);
      animation: blinkCaret .80s step-end infinite;
    }

    @keyframes blinkCaret {
      from, to {
        background-color: transparent;
      }
      50% {
        background-color: var(--sl-color-white);
      }
    }

    @keyframes greetingScaleUp {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
  }
</style>

<script>
  import { $userInfo } from "@stores/userInfoStore";

  const outputUserName = document.querySelector(".output-type") as HTMLSpanElement;

  // Get the first name
  $userInfo.subscribe(user => {
    if (user) {
      const inputUsername = user.displayName.split(" ")[0]; // Get the first name
      outputUserName.textContent = inputUsername;
    }
  });


  // const typingSpeed = 250;

  /* RECURSION
  if (inputUsername) {
    let i=0;
    function typeCharacter(){
      if (i <= inputUsername.length){
        outputUserName.innerText += inputUsername.charAt(i);
        i++;
        setTimeout(typeCharacter, typingSpeed);
      }
    }
    document.addEventListener("DOMContentLoaded", () => typeCharacter() )
  }*/
</script>
